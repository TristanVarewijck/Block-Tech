doctype html
include includes/head.pug

body

// navbar 
nav
  ul
    li 
  a(href='#')

// header 
header
  h1 Discover Events
  h2 Stay active Together
main
  section
    form.search
      input(type='text' placeholder='Search for events...')
    button.filter-button <ion-icon name="options"></ion-icon>
  
  // groups 
  section
    h2.results #{results} available groups!
    ul 
      // Bron van 'each in': https://pugjs.org/language/iteration.html
      each group in groups 
        li
          div
            h2 #{group.name}
            p <ion-icon name="walk"></ion-icon>  Activity: #{group.activity} 
            p <ion-icon name="location"></ion-icon> Distance: #{group.distance} km
            p <ion-icon name="time"></ion-icon>  Duration: #{group.duration}
            p <ion-icon name="people"></ion-icon>  Attendence: 0/#{group.attendence}
            a(href='#') Join Group! 
            a(href='#') More Info
           
// footer  
include includes/footer.pug

// filter page 
article.filters-hidden
  nav
    ul
      li
        button.close-filter Close
      li
        h2 filters
      li
        // Bron: reset te page, stackoverflow: https://stackoverflow.com/questions/29884654/button-that-refreshes-the-page-on-click
        button(onclick="window.location.href=window.location.href") Reset
  
  // filter form (inputs)
  form.form(action="/" method='POST')
    label(for='activity') Activities
    select#activity(name='activity')
        if(filterDB)
          option(value='all', selected=filterDB.document.activity === 'all') All
          option(value='cycling', selected=filterDB.document.activity.includes('cycling')) Cycling
          option(value='walking', selected=filterDB.document.activity.includes('walking')) Walking
          option(value='jogging', selected=filterDB.document.activity.includes('jogging')) Jogging
          option(value='fishing', selected=filterDB.document.activity.includes('fishing')) Fishing
        else 
          option(value='all') All
          option(value='cycling') Cycling
          option(value='walking') Walking
          option(value='jogging') Jogging
          option(value='fishing') Fishing
    label(for='distance') Travel Distance (max)
    // automatic value change, stackoverflow: https://stackoverflow.com/questions/44675522/get-the-text-value-of-a-select-created-dynamically
    
    if(filterDB)
      input#distance(type='range', name='distance', min='10', max='50', step='10', value=filterDB.document.distance, oninput="this.nextElementSibling.value = this.value")
      output #{filterDB.document.distance}
    else 
      input#distance(type='range', name='distance', min='10', max='50', step='10', value="50", oninput="this.nextElementSibling.value = this.value")
      output 50
    span km
    label(for='attendence') Attendence (max)
    select#attendence(name='attendence')
        if(filterDB)
          option(value='all', selected=filterDB.document.attendence.includes('all')) all
          option(value='10 people', selected=filterDB.document.attendence.includes('10')) 10 people
          option(value='20 people', selected=filterDB.document.attendence.includes('20')) 20 people
          option(value='30 people', selected=filterDB.document.attendence.includes('30')) 30 people
          option(value='40 or more people', selected=filterDB.document.attendence.includes('40')) 40 or more people
        else 
          option(value='all') all
          option(value='10 people') 10 people
          option(value='20 people') 20 people
          option(value='30 people') 30 people
          option(value='40 or more people') 40 or more people
    
    label(for='duration') Duration (max)
    select#duration(name='duration')
        if(filterDB)
          option(value='all', selected=filterDB.document.duration.includes('all')) all
          option(value='1 hour', selected=filterDB.document.duration.includes('1')) 1 hour
          option(value='2 hours', selected=filterDB.document.duration.includes('2')) 2 hours
          option(value='3 hours', selected=filterDB.document.duration.includes('3')) 3 hours
          option(value='4 hours or more', selected=filterDB.document.duration.includes('4')) 4 hours or more
        else 
          option(value='all') all
          option(value='1 hour') 1 hour
          option(value='2 hours') 2 hours
          option(value='3 hours') 3 hours
          option(value='4 hours or more') 4 hours or more
    input(type='submit' value='FILTER')

script(src='/scripts/app.js')

// all used icons are from: https://ionicons.com/ and are loaden with the script below: 
script(src='https://unpkg.com/ionicons@5.4.0/dist/ionicons.js')
   